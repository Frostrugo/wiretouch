class DataManager {
  Serial port;
  String fakeData;
  byte[] serBuffer = null;

  DataManager() {
  }

  void calibrate(Serial port) {
    this.port = port;
    try {
      this.port.clear(); // // do we need this? (cargo cult programming)
      this.serBuffer = new byte[(horizontalWires * verticalWires * 10)/8];
      this.port.buffer(serBuffer.length);
      delay(2000); // still needed?
      this.port.write('s');
      textInformation = "starting to calibrate";
    } 
    catch (Exception e) {
      textInformation = "error with Serial connection: "+e;
      println(Serial.list());
    }
  }

  void initFakeData() {
    // show the hand
    fakeData = "0.8132467611023529,0.9371873114398571,0.9897323827856692,0.9236305771781618,0.8883348094480457,0.8221341482596342,0.8070271579819224,0.9546077074513005,0.7473188817552288,0.9340882351047094,0.9231876554003672,0.7182807502113564,0.6388499244214613,0.6367318630811203,0.47971239334289,0.5734794168562151,0.31413512925776127,0.6331188263786057,0.9487095286027207,0.7787857306187626,0.7410040509989372,0.8481927710843968,0.9037749639465092,0.9065071019046518,0.9949200129085937,0.9523737601929676,0.8542143291636249,0.7168972522862814,0.7673122785841765,0.7756219078436348,0.6427408566939831,0.8397794192371809,0.8102461082948881,0.624134957134765,0.4995087129115835,0.5928211663748574,0.6007245940521393,0.6059527199639333,0.5382793114769552,0.6699346452429512,0.9950967761689308,0.7963223267244105,0.812344859596027,0.8461538461538461,0.8451315935115181,0.8833665317831226,0.9871891769650295,0.9900114833789113,0.7677835794217718,0.6599348795294622,0.7127181674010803,0.7571075707778169,0.4993640953242686,0.7678007102260948,0.5979815895734207,0.598403737363047,0.4578082686459437,0.6180448548172782,0.6133188999336194,0.6717874920329482,0.46993042705257787,0.6805872523152104,0.9497695566340278,0.8161576056067368,0.93672653488763,0.8461538461538461,0.8870286765608498,0.8964351795324348,0.975008079896596,0.9221967060531872,0.8775842965967351,0.8192428631814512,0.9440870713513566,0.8287076354877773,0.6890527352876837,0.8969351411589757,0.6041959517015024,0.5481981057146952,0.4496702658725052,0.5579617646050307,0.6242748833256829,0.6587601921732279,0.4001003603746199,0.5708340938725897,0.8999202148782257,0.6779270485157384,0.76661668426243,0.8627450980392157,0.8252502561524598,0.8798637271882357,1.0138724872853624,0.8236803885736287,0.7614032445872699,0.8082016650896487,0.8860300773617057,0.7909922537633095,0.6544208772600396,0.856661835866273,0.6184878184108799,0.6450103342945869,0.5210670441680619,0.6456888338975969,0.798504322864029,0.6973964685150494,0.37061567242405064,0.5481627838563482,0.8868297155909234,0.6413291844257107,0.7668362427446374,0.8462174141687328,0.8604121230040438,0.9044270648452041,0.9553507066126401,0.686569098336354,0.520900949073019,0.7359992954369063,0.6776913027595406,0.7107165596435964,0.6911161484814077,0.9059868826077259,0.7477741523704078,0.709597531690886,0.5549299776973957,0.726513814760298,0.8796768850445309,0.8007292270785524,0.5981602447110386,0.7563140393983543,0.9425865135237171,0.670042759103277,0.864499411473726,0.8461538461538461,0.886939076778665,0.880225354695926,0.8866061174075084,0.6487514126612729,0.5334858836789078,0.8554014512031376,0.9192406626044469,0.8877944749496562,0.8089780003380657,0.9308619107534516,0.7869801032258521,0.5921381029863754,0.5427280855779051,0.6708617107171255,0.7445891769222237,0.6764541457374793,0.472276956772149,0.6446324692983646,0.9514542359976432,0.7654876872285618,0.8843218915773666,0.8461540944478239,0.9823817888759923,0.8918923080819203,0.956285671293261,0.813027570201524,0.703274331105701,0.869076275542244,0.9270535187970159,0.8875372345477616,0.7479578526559241,0.8626843478765998,0.6729981646965577,0.5292740104306323,0.4217926685232884,0.5952479833248412,0.6275797229797762,0.698645114853386,0.44503907138160687,0.68001449101556,0.9711247899495996,0.8164686369523184,0.8684663434000595,0.8543689636811549,0.9521186850558598,0.9295147995223709,0.9363625661392675,0.800333285096108,0.6639251036354462,0.7476041548998029,0.7115432682100108,0.8008642623787252,0.6281240213760071,0.8052733434344286,0.6528734169614148,0.5909959525336965,0.5021193539513373,0.6700015866049678,0.9177861918964638,0.7881927147767152,0.6642599606327614,0.7648997960021867,0.9732839113325408,0.8321356594080581,0.9671979110795504,0.846153846214465,0.8800556844960755,0.868942821887914,0.9739186150079888,0.6356334673900182,0.38809738521685827,0.5345269712371061,0.6793380083228988,0.7594330903114702,0.5617072446283736,0.7283608945104283,0.5836172713187593,0.713740872688746,0.7192281888160545,0.8859837824861624,0.9074720434914436,0.8585057214209133,0.8360040006419271,0.8719845006418114,0.9970971243841443,0.8814665422954395,0.9232052818883679,0.8461538461538461,0.9445309244512292,0.9328919873156206,0.9132866186897675,0.5816939420119768,0.4032693546250493,0.6801619793844452,0.8408661491586037,0.7925013174270087,0.5454186076006972,0.621344182121097,0.6583135026325432,0.7858647846531098,0.8697365925947235,0.9204132933710539,0.8503209279570194,0.7847757435340132,0.8804358451261487,1.017260371568083,1.0131489422698874,0.9402876172961572,0.9891270105540194,0.8461578188901312,0.9750054965919114,0.9012148803341671,0.9716077415457246,0.7474052802856255,0.7767171258555433,0.8416577235867065,0.7327416502182127,0.6802191402315496,0.37737856074008,0.556249428043983,0.7252262386733509,0.8557464255314926,0.8548377525447759,0.799381917398101,0.671593094378086,0.6598817050547267,0.9076597235731065,0.9367343531080635,1.03145390375428,0.9006018748893284,0.9230741423918074,0.8464081755335173,0.8123736733119351,0.8730808035085007,1.000436430025664,0.8077191505849501,0.7400595503256107,0.7441210699544991,0.4774931734667014,0.5017709887490917,0.41782929094823806,0.7338349332272414,0.9539874528671161,0.799293276366487,0.83546602895283,0.8071761201457979,0.5207359428189043,0.7076965924175121,0.901778363305101,0.9481149272121927,1.0141645312857641,0.8795446518981087,0.8528918163693369,0.9230769230769231,0.8933944999316277,0.8919620855427359,0.9968751280079976,0.8274717869612652,0.86351518220525,0.7313030121877021,0.4674505316363796,0.547096165565146,0.5335085410919768,0.8410695737319162,1.0424419522563604,0.9412190154754942,0.9090733782944732,0.7930845759555756,0.7475609731187319,0.869393955424162,0.9230134431020519,0.9535051531612941,1.02213564959417,0.8499959630693267,0.9700705670515685,0.8461538461576348,0.8000442044017911,0.9048224721444159,0.9969677465316867,0.8751426173229971,0.8648870989655905,0.7847489061906324,0.783278677730268,0.7749400313918556,0.6366955330757805,0.9616129981239044,1.0933998270758039,0.872121321550705,0.8995387179253127,0.8543677126006076,0.8730351946448357,0.8768001804300355,0.9306053884826856,0.8012445330799697,0.9988695614343387,0.9035329680204712,0.9768760710342986,0.8671290819434918,0.9080518010780086,0.9125999930783951,0.9853064565036496,0.8861439373672472,0.8625145526015365,0.8658973270604957,0.6777662463964819,0.842127653350163,0.764373606791151,0.9531367799571092,1.021561715556873,0.8893790953828915,0.9324835110332896,0.9490420252398776,1.0009309570969929,0.9241311401733501,0.941838658585017,0.6481715548685438,0.940220950180457,0.7763142702827107,0.7611019323401598,0.8461538462751445,0.8844050050203635,0.929003101317576,0.9761892181821595,0.8503797457351179,0.8348774727323346,0.8298528071103035,0.5036124995560124,0.6060834588900783,0.6779598287147448,0.83606112634105,0.9535862357913344,0.8834297290420874,0.9785763848460652,0.9500501158908778,1.1882573399278835,0.9854739821911874,0.7277025522784984,0.3958606072475165,0.681648017409823,0.7898683225354194,0.7696643559055912,0.8628113125377218,0.7786735711637174,0.9020978529230087,1.0133508506852897,0.8744628316599617,0.8884794766650446,0.807156341547879,0.5827494888267356,0.5117940262792662,0.3951706853553248,0.6916112982987936,0.772668768496007,0.8807154933194578,1.0476053873534736,0.9993774174355057,1.097457667522272,1.0072218260304941,0.9245715408363832,0.6010047893286564,0.9109721559544508,0.8119319828650546,0.8007972186666908,0.8462174141725238,0.8530934999994153,0.9249294693847852,0.9609524229593691,0.8985135287090968,0.8148320359634222,0.7858263139169981,0.801446722651235,0.6759012102609867,0.4044307669338303,0.5236343662803717,0.4645058356763421,0.8034768114261607,0.8999346695737013,0.9116711285699882,1.0764500906992789,1.0059471378911105,1.0698186941724506,0.7747184850397368,0.9454615345752483,0.7712738016951807,0.7915026817461331,0.8461538461538464,0.8696179377731256,0.8608110291578311,0.9350061949601532,0.7824304980221136,0.7151701174598077,0.8128071813590891,0.8090793599164903,0.7348311671100587,0.4944912408318724,0.5921735019625757,0.4129475868159707,0.6713317922203963,0.8488898531236079,0.8437253572661587,1.0481562489004712,1.0390549307234946,0.9766955149104344,0.8193202578218962,0.9833433906370018,0.786948986312541,0.8220957684749043,0.9166666672358169,0.8031370559233043,0.8581635033973827,0.905060480676338,0.6440641707939871,0.5175728052664212,0.6485941252057575,0.8902071923105125,0.7820699703678201,0.6300174757653494,0.777166874019402,0.6691172370209028,0.6575073780631824,0.529796016808481,0.7513509201751184,0.8413327571200714,0.9144291703481999,0.8922254614448586,0.8485659678687079,0.976256006640508,0.8231851963618905,0.8826305666383387,0.9230769230769231,0.8826015303536183,0.8935766562566492,1.0065105702173356,0.7425294701891196,0.5796462998506646,0.6201372860255411,0.696800101775802,0.69155957511293,0.5848023167388083,0.9589457968887619,0.9204173848619464,0.7805020574746142,0.6638279846903302,0.6593359411877399,0.7673167780941377,0.816793281927239,0.6478497909219971,0.7324914156013402,0.9335969009858671,0.7765390412070435,0.9123730568076445,0.8502415458946762,0.8503292513519541,0.8753170013800566,0.9455673214102733,0.8951996692506194,0.787799340152273,0.8126818493748785,0.8056917815766136,0.7895092327082289,0.5587885905716118,0.815816417759726,0.8475591398227529,0.6387099166895283,0.5385611418267929,0.6480652978048808,0.685644953327907,0.6857072415911328,0.4784637767668822,0.5817956136356683,0.8462878990432741,0.6229204085001554,0.7565507963714895,0.8461538461538461,0.9427735108706071,0.9008072348589772,0.9098068038637706,0.8618986714540773,0.7918768160719348,0.8041239686263063,0.7429006094033653,0.86224082462241,0.6889457490953261,0.8224385066796088,0.6153317034688497,0.5178637859735773,0.4234449365360648,0.669580915897226,0.6637386605789222,0.7306642196432794,0.39550425653596055,0.4358574377124016,0.5539160172986437,0.5119944039175311,0.6519286911278424,0.8461538616722155,0.9306666789731193,0.8919896022012833,0.8036796906364317,0.5997826364419344,0.1580614444334827,0.6093462173142346,0.7255834729573163,0.7235489208998126,0.6674140637933388,0.7409940869066436,0.4134331706904412,0.4023255925881185,0.4012634769119388,0.6891025847623105,0.8002146231716878,0.7491887192061523,0.5421631627883511,0.5831726908247843,0.40224011736708193,0.4351460675729178,0.4497467185469074,0.8461538461540238,0.9006154072658521,0.8999745048701002,0.9381027659391938,0.6619060118363608,0.4520116329260159,0.5473067942840487,0.6262179642173893,0.7187592694787186,0.5488629656822368,0.8288137946336307,0.7922306638899623,0.7128627155309393,0.5682242736568426,0.7451884264274568,0.8293860437453298,0.92371709788249,0.9878432789370271,0.7986007955574028,0.9520794990370625,0.6942429059601313,0.7859067871528757,0.8461578188787646,0.8974888005745436,0.9674230271758626,0.9820060088421942,0.7863816800084537,0.7077808875694633,0.8172909250175934,0.9044550892482485,0.8542130864028141,0.6442845160741588,0.8760638301897374,0.6698436964282011,0.5917888197065908,0.4219359257458504,0.667958572674709,0.6181380545580081,0.7109702176321663,0.7310773311004597,0.782114289412058,0.9954863269378921,0.7813995386748809,0.8081135642255044,0.8461538461538461,0.7768298723248425,0.92300076769474,0.9955489538253275,0.9337254436650062,0.8179882291329592,0.8292886558335874,0.8804577223566648,0.8649369311010836,0.5703719006605622,0.7071012171917551,0.6634594423623488,0.6621990250150032,0.43316018292089653,0.6624600844289341,0.5234378424840996,0.6262409722735541,0.6725593864689821,0.79118494521105,0.9956878097141463,0.8620214923482674,0.8304104981656285,0.9230769230769231,0.7059562354815649,0.9461620981557091,0.9956061222866737,0.8761184433485394,0.21008069365634532,0.6991301852217128,0.5217725630776222,0.6032947171786691,0.43975443547690163,0.704998287566727,0.7576880022809144,0.7707970045749065,0.5694403899579132,0.7999885279364076,0.5946405266120907,0.7189821589392471,0.7649152029705771,0.7888926690833685,0.9966077655356336,0.8830136222617325,0.8270603476207192,0.8461538616722155,0.17077693783688946,0.8672732529589142,0.996848575998141,0.8276206754414585,0.8461538461538461,0.7067868846717323,0.5383928497945056,0.06335692987548723,0.546623874392423,0.7376903278660004,0.7239896121956407,0.7518194189279414,0.6288771409181723,0.7735925631960785,0.7055091688849647,0.7157713023241644,0.7611192508943483,0.7512230412132552,0.9799652791840876,0.7521743609429015,0.7731236681544709,0.8461538461538461,0.4121011495782589,0.8856837878971837,0.9938303532344016,0.5315510928922543,0.8461539703046055,0.6973677969845208,0.23485663021100642,0.863803713342786,0.15088233974460863,0.09716728386766237,0.12927723369449748,0.7624831769053985,0.760816885676233,0.7613278720179943,0.8656796281428012,0.778126899685664,0.744055057548935,0.7763513231486029,0.9659172885880877,0.7760197919199218,0.7838204164971603,0.8461538461538461,0.8415329331253955,0.9235518101668989,0.982228003231626,0.5502878621610353,0.8481927788809609,0.6615760152674035,0.46874899918129526,0.8461548472110865,0.1611294472422032,0.09919316253627879,0.16353966683499385,0.7904446812327757,0.7529076747971237,0.8212491631865256,0.8983688944236422,0.8273713780962231,0.8637939943241726,0.8087197693900242,0.9992113423464328,0.8333415013668903,0.806168738037539,0.9230769230769231,";
    this.parseFakeData();
  }

  int sb2ub(byte p) {
    return p < 0 ? 256+p : p;
  }

  void consumeSerialBuffer(Serial p) {
    p.readBytes(serBuffer);
    int bs = 0, br = 0, cnt = 0;
    for (int i=0; i<serBuffer.length; i++) {
      br |= sb2ub(serBuffer[i]) << bs;
      bs += 8;
      while (bs >= 10) {          
        int sig = br & 0x3ff;
        br >>= 10;
        bs -= 10;          
        int px = cnt / horizontalWires, py = cnt % horizontalWires;  
        if (averageSignalCounter > 0) {
          // calculate the average signal strength for every crosspoint
          crosspoints[px][py].accumulateAvgSig(sig);
        }
        else {
          crosspoints[px][py].setSignalStrength(sig);
        }
        cnt++;
      }
    }
    calibrationFeedback();
  }

  // TODO: this code needs some serious refactoring...
  void calibrationFeedback() {
    if (averageSignalCounter > 0) {
      averageSignalCounter--;
      if (averageSignalCounter != 0) {
        textInformation = "calibrating: "+averageSignalCounter;
      }
      else {
        showHelpText();
      }
    }
  }

  void parseFakeData() {
    fakeData = trim(fakeData);
    float data[] = float(split(fakeData, ','));
    int k = 0;
    for (int i = 0; i < verticalWires; i++) {
      for (int j = 0; j < horizontalWires; j++) {
        crosspoints[i][j].signalStrength = data[k];
        k++;
      }
    }
  }

  void printData() {
    println("measured signals:");
    String myString = "";
    for (int i = 0; i < verticalWires; i++) {
      for (int j = 0; j < horizontalWires; j++) {
        myString = myString+(int) crosspoints[i][j].measuredSignal+",";
      }
    }
    println(myString);
    println("calculated signal strength:");
    myString = "";
    for (int i = 0; i < verticalWires; i++) {
      for (int j = 0; j < horizontalWires; j++) {
        myString = myString+crosspoints[i][j].signalStrength+",";
      }
    }
    println(myString);
  }
}

